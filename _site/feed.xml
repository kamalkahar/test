<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-02-07T15:30:50+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">Real Time Communication, Presence and Messaging Software Provider</title><entry><title type="html">BeagleIM 4.1 and SiskinIM 6.1 released</title><link href="http://localhost:4000/jekyll/update/2020/11/12/beagleim-4.1-and-siskin-6.1-released.html" rel="alternate" type="text/html" title="BeagleIM 4.1 and SiskinIM 6.1 released" /><published>2020-11-12T00:00:00+05:30</published><updated>2020-11-12T00:00:00+05:30</updated><id>http://localhost:4000/jekyll/update/2020/11/12/beagleim-4.1-and-siskin-6.1-released</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/11/12/beagleim-4.1-and-siskin-6.1-released.html"><![CDATA[<p>New versions of XMPP clients for Apple’s mobile and desktop platforms have been released. The biggest change is introduction of XEP-0215: External Service Discovery which helps with establishing audio and video calls.<br /></p>
<h3>BeagleIM</h3>
<p>The stable release of BeagleIM 4.1 contains a lot of changes and stability improvements.</p>
<h3>New XEPs:</h3>
<ul>
<li>Added support for <a href="https://xmpp.org/extensions/xep-0215.html" style="color:#5a66e8;" target="_blank">XEP-0215: External Service Discovery</a></li>
</ul>
<h3>Major changes:</h3>
<ul>
<li>Added shortcut for Last Message Correction with CMD+ARROW UP</li>
<li>Added support for automatic scaling/recompression of images and videos to reduce size of shared files. (hold alt when sharing image file)</li>
</ul>

<center><img src="http://localhost:4000assets/img/blog/beagle-image-compression.png" style="width:50%;" /><br /><br /></center>
<ul>
<li>Added support for sharing multiple files with drag &amp; drop, copy &amp; paste or selection.</li>
<li>Improved onboarding process</li>
<li>Simplified updating account password</li>
</ul>
<center><img src="http://localhost:4000assets/img/blog/beagle-password-change.png" style="width:50%;" /><br /><br /></center>
<p><br /></p>
<ul>
<li>Added indication for corrected and retracted messages</li>
<li>Added support for /me command</li>
<li>Replaced Me with actual nickname user is using on the account on which chat was opened.</li>
</ul>

<center><img src="http://localhost:4000assets/img/blog/beagle-message-edit-retract.png" style="width:50%;" /><br /><br /></center>
<p><br /></p>
<ul><li>Redesigned accounts list</li></ul>

<center><img src="http://localhost:4000assets/img/blog/beagle-accounts.png" style="width:50%;" /><br /><br /></center>
<p><br /></p>

<ul><li>Added support for displaying jabber:iq:version</li></ul>

<center><img src="http://localhost:4000assets/img/blog/beagle-disco-version.png" style="width:50%;" /><br /><br /></center>
<p><br /></p>

<ul><li>Improved presentation of VCard data</li></ul>

<center><img src="http://localhost:4000assets/img/blog/beagle-vcard.png" style="width:50%;" /><br /><br /></center>
<p><br /></p>

<ul><li>Rewrite of Markdown support to optimize it and fix the crash</li></ul>

<h3>Fixes</h3>
<ul>
<li>Improved VCard support for MUC group chats</li>
<li>Fixed issue with Reply option clearing clipboard</li>
<li>Added dropping of errors received on message delivery confirmations not being delivered properly</li>
<li>Fixed issue with VCard editing leading to disabled Edit button and improved UX</li>
<li>Workaround for crash on BigSur (missing permission)</li>
<li>Fixed issues with handling subscription requests</li>
<li>Fixed issue with joining password protected MUC rooms</li>
<li>Fixed another crash related to movie preview</li>
<li>Fixed issue with right part of 'new' button not being clickable</li>
<li>Fixed issue with marking all MIX messages received while offline as read.</li>
<li>Fixed support for domains ending with .local</li>
</ul>
<h3>SiskinIM</h3>
<p><br />
<strong>The stable release of SiskinIM 6.1 contains changes and stability improvements.</strong><br /></p>
<ul>
	<li>Added support for XEP-0215: External Service Discovery</li>
	<li>Added support for automatic scaling/recompression of images and videos to reduce size of shared files.</li>
	<li>Added support for /me command</li>
	<li>Replaced Me with actual nickname user is using on the account on which chat was opened.</li>
	<li>Fixed issue with marking all MIX messages received while offline as read.</li>
	<li>Fixed support for domains ending with .local</li>
	</ul>
<h3>Download</h3>
<p><br />
You can download both application from their respective app-stores: <a href="https://beagle.im/" style="color:#5a66e8;" target="_blank">Beagle IM</a> from <a href="https://apps.apple.com/us/app/beagleim-by-tigase-inc/id1445349494" style="color:#5a66e8;" target="_blank">macOS appstore</a> and <a href="https://siskin.im/" style="color:#5a66e8;" target="_blank">Siskin IM</a> from <a href="https://apps.apple.com/us/app/tigase-messenger/id1153516838" style="color:#5a66e8;" target="_blank">iOS appstore</a> and star them on GitHub: <a href="https://github.com/tigase/siskin-im" style="color:#5a66e8;" target="_blank">Siskin IM on GitHub</a> and <a href="https://github.com/tigase/beagle-im" style="color:#5a66e8;" target="_blank">Beagle IM on GitHub</a></p>

<h3 style="text-align:center;">Join the Discussion</h3>
<center><img src="http://localhost:4000assets/img/blog/join-discussion-qr-code.png" style="width:30%;border-radius:0%;" /><br /><br /></center>

<center>You can discuss all-things-Tigase (including our client apps)<br /> on our groupchat: <a href="mailto:tigase@muc.tigase.org" style="color:#5a66e8;">tigase@muc.tigase.org</a></center>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><category term="release" /><category term="beagleim" /><category term="siskinim" /><category term="VOIP" /><category term="jingle" /><summary type="html"><![CDATA[New versions of XMPP clients for Apple’s mobile and desktop platforms have been released. The biggest change is introduction of XEP-0215: External Service Discovery which helps with establishing audio and video calls. BeagleIM The stable release of BeagleIM 4.1 contains a lot of changes and stability improvements. New XEPs: Added support for XEP-0215: External Service Discovery Major changes: Added shortcut for Last Message Correction with CMD+ARROW UP Added support for automatic scaling/recompression of images and videos to reduce size of shared files. (hold alt when sharing image file)]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets%5Cimg%5Cblog%5Cb1.png" /><media:content medium="image" url="http://localhost:4000/assets%5Cimg%5Cblog%5Cb1.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Publishing and Subscribing with Halcyon</title><link href="http://localhost:4000/jekyll/update/2020/09/24/halcyon-publishing-and-subscribing-with-halcyon.html" rel="alternate" type="text/html" title="Publishing and Subscribing with Halcyon" /><published>2020-09-24T00:00:00+05:30</published><updated>2020-09-24T00:00:00+05:30</updated><id>http://localhost:4000/jekyll/update/2020/09/24/halcyon-publishing-and-subscribing-with-halcyon</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/09/24/halcyon-publishing-and-subscribing-with-halcyon.html"><![CDATA[<h3>Publishing and Subscribing with Halcyon</h3>

<p>As you recall, Halcyon is multiplatform XMPP library written in Kotlin. In a previous article: ‘A look at Halcyon’ we had a look at basic concepts in library and we created a simple client.<br /></p>

<p>This time we will dive into more complex stuff. We will create simple solution to monitoring temperature at home :-) In this article we will not focus on measuring temperature. We will create a command-line tool to publish temperature provided as parameter.<br /></p>

<p>First letter in XMPP acronym is from the word ‘eXtensible’. There is a lot of extensions for the XMPP protocol. One of them is <a href="https://xmpp.org/extensions/xep-0060.html" style="color:#5a66e8;" target="_blank">XEP-0060: Publish-Subscribe</a> - specification for publish-subscribe functionality. We will use it to create our temperature monitor.<br /></p>

<p>You need to use XMPP Server with PubSub component. You can use your deployment (for example Tigase <a href="https://github.com/tigase/tigase-server/" style="color:#5a66e8;" target="_blank">XMPP Server</a> or use one of the publicly available servers, for example sure.im and its PubSub component pubsub.sure.im. A PubSub node with unique name (to avoid conflicts) will have to be created in the PubSub component. Please note that node created with default configuration is open, which means that everyone can subscribe to it (but only you will be able to publish data there).<br /></p>

<h3>Data structure</h3>
<p>First of all we have to create data structure. In our case, it will be as simple as possible:<br /><br />
<b>&lt;temperature timestamp=”1597946187562”&gt;23.8&lt;/temperature&gt;</b><br /></p>

<p>timestamp is time represented as a number of milliseconds after January 1, 1970 00:00:00 GMT.<br /></p>

<p>We can use DSL (defined in Halcyon) to create such XML fragment:<br /></p>

<pre><b>val payload = element("temperature") {
attributes["timestamp"] = (Date()).time.toString()
+temperature.toString()
}</b></pre>

<h3>Publisher</h3>

<p>Publisher is a simple XMPP client that connects to the server, sends information to PubSub component and immediately disconnects.<br /></p>

<p>First of all, lets define global values to keep node name and PubSUB JID:<br /></p>

<pre><b>val PUBSUB_JID = "pubsub.tigase.org".toJID()
val PUBSUB_NODE = "temperature_in_my_house"</b></pre>

<p>It cannot be called a good practice, but is good enough for us right now :-)<br /></p>

<p>In the previous article we explained how to create a simple client. Now we will focus on PubSubModule. This module allows publishing and receiving events as well as managing PubSub nodes and subscriptions.<br /></p>

<p>This is the main code that publishes events:<br /></p>

<pre><b>pubSubModule.publish(PUBSUB_JID, PUBSUB_NODE, null, payload).handle {
success { request, iq, result -&gt;
println("YAY! Published with id=${result!!.id}")
}
error { request, iq, errorCondition, s -&gt;
System.err.println("ERROR $errorCondition! $s")
}
}.send()
</b></pre>
<p>But what if the PubSub node does’t exist (e.g. it was’t created yet)? It’s simple: we have to create it using method<br />
create():</p>

<p>The question is: under what conditions we should call this part of code and automatically create the node? One of the possibilities would be moment when item publishing fails with error <mark style="background-color&#x3a; &num;f5f2f0;">item-not-found.</mark><br /></p>

<pre><b>
pubSubModule.publish(PUBSUB_JID, PUBSUB_NODE, null, payload).handle {<br />
            success { request, iq, result -&gt;<br />
            println("YAY! Published with id=${result!!.id}")<br />    }<br />
            error { request, iq, errorCondition, s -&gt;<br />
            if (errorCondition == ErrorCondition.ItemNotFound) {<br />
            println("Node not found! We need to create it!")<br />
            pubSubModule.create(PUBSUB_JID, PUBSUB_NODE).handle {<br />
        success { _&#x3a; IQRequest, _&#x3a; IQ, _&#x3a; Unit? -&gt; println("Got it! Node created!") }<br />
      error { _&#x3a; IQRequest, _&#x3a; IQ?, errorCondition&#x3a; ErrorCondition, msgs&#x3a; String? -&gt;<br />
                    println(
                        "OOPS! Cannot create node $errorCondition $msgs"
                    )<br />                } <br />            }.send() <br />        } else System.err.println("ERROR $errorCondition! $s")<br />    }<br />}.send()
                    </b></pre>
<p><br /></p>

<p>To simplify the code, publishing will not be repeated after node creation.<br />
It is good to use <mark style="background-color&#x3a; &num;f5f2f0;">client.waitForAllResponses()</mark> before <mark style="background-color&#x3a; &num;f5f2f0;">disconnect()</mark>, to not break connection before all responses comes back.<br /></p>

<h3>Listner</h3>

<p>Listener is also a client (it should works on different account) that subscribes to receiving events from specific nodes of PubSub component. PubSub items received by <mark style="background-color&#x3a; &num;f5f2f0;">PubSubModule</mark> are distributed in the client as <mark style="background-color&#x3a; &num;f5f2f0;">PubSubEventReceivedEvent</mark> in Event Bus. To receive those events you have to register an events listener:<br /></p>

<pre><b>

client.eventBus.register(PubSubEventReceivedEvent.TYPE) {
    if (it.pubSubJID == PUBSUB_JID &amp;&amp; it.nodeName == PUBSUB_NODE) {
        it.items.forEach { item -&gt;
            val publishedContent = item.getFirstChild("temperature")!!
            val date = Date(publishedContent.attributes["timestamp"]!!.toLong())
            val value = publishedContent.value!!
            println("Received update: $date :: $value<sup>o</sup>C")
        }
    }
}</b></pre>

<p>Note, that this listener will be called on every received PubSub event (like OMEMO keys distribution, PEP events, etc). That’s why you need to check node name and JabberID of PubSub component.<br /></p>

<p>Your client will not receive anything from PubSub if it does not subscribe to specific node. Because subscription is persistent (at least with default node configuration), client doesn’t need to subscribe every time it connects to the server. Though, it should be able to check if it’s subscribed to the specific node or not. For that, you need to retrieve list of subscribers and see if the JabberID of the client is on the list:<br /></p>

<pre><b>
val myOwnJID = client.getModule(BindModule.TYPE)!!.boundJID!!
pubSubModule.retrieveSubscriptions(PUBSUB_JID, PUBSUB_NODE).response {
if (!it.get()!!.any { subscription -&gt; subscription.jid.bareJID == myOwnJID.bareJID })
  {
    println("We have to subscribe")
    pubSubModule.subscribe(PUBSUB_JID, PUBSUB_NODE, myOwnJID).send()
  }
}.send()
</b></pre>

<p>NOTE: In this example we intentionally skipped checking response errors.<br /></p>

<p>PubSub component can keep some history of published elements. We can retrieve that list easily:<br /></p>

<pre><b>
pubSubModule.retrieveItem(PUBSUB_JID, PUBSUB_NODE).response {
    when (it) {
        is IQResult.Success -&gt; {
            println("Previously published temperatures:")
            it.get()!!.items.forEach {
                val date = Date(it.content!!.attributes["timestamp"]!!.toLong())
                val value = it.content!!.value!!
                println(" - $date :: $value<sup>o</sup>C")
            }
        }
        is IQResult.Error -&gt; println("OOPS! Error " + it.error)
    }
}.send()
</b></pre>

<p>Length of the history is defined in node configuration.<br /></p>

<h3>Sample output</h3>

<p>Submitting new temperature in <mark style="background-color&#x3a; &num;f5f2f0;">Publisher </mark>…:<br /></p>

<center><img src="http://localhost:4000assets/img/blog/halcyon-pubsub-publisher-run.png" style="width:50%;" /><br /><br /></center>
<p><br /></p>

<p>yields receiving notifications in <mark style="background-color&#x3a; &num;f5f2f0;">Listener:</mark><br /></p>

<center><img src="http://localhost:4000assets/img/blog/halcyon-pubsub-listener-listen.png" style="width:50%;" /><br /><br /></center>
<p><br /></p>

<h3>Summary</h3>
<p>We presented a simple way to create a PubSub publisher and consumer. You can extend it: for example you can run publisher on Raspberry Pi connected to some meteo-sensors. Possible applications of PubSub component are limited only by your imagination.<br /></p>

<p>All source codes for this article can be found in <a href="https://github.com/tigase/halcyon-examples/tree/master/article-pubsub" style="color:#5a66e8;" target="_blank">GitHub repository</a>.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><category term="client" /><category term="library" /><category term="halcyon" /><category term="kotlin" /><category term="kotlin-multiplatform" /><category term="native" /><category term="js" /><category term="javascript" /><category term="android" /><category term="pubsub" /><category term="XEP-00600" /><summary type="html"><![CDATA[Publishing and Subscribing with Halcyon]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/b2.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/b2.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Using STUN &amp;amp; TURN server with Tigase XMPP Server with XEP-0215 (External Service Discovery)</title><link href="http://localhost:4000/jekyll/update/2020/09/15/tigase-server-with-stun-turn.html" rel="alternate" type="text/html" title="Using STUN &amp;amp; TURN server with Tigase XMPP Server with XEP-0215 (External Service Discovery)" /><published>2020-09-15T00:00:00+05:30</published><updated>2020-09-15T00:00:00+05:30</updated><id>http://localhost:4000/jekyll/update/2020/09/15/tigase-server-with-stun-turn</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/09/15/tigase-server-with-stun-turn.html"><![CDATA[<p>Communication with your family and friends is not only about instant chats. Audio and Video calls are quite important and sometimes, under unfavourable network configurations establishing a call may prove difficult. Luckily, with the help of <a href="https://en.wikipedia.org/wiki/STUN" style="color:#5a66e8;" target="_blank">STUN (Session Traversal Utilities for NAT)</a> and <a href="https://en.wikipedia.org/wiki/Traversal_Using_Relays_around_NAT" style="color:#5a66e8;" target="_blank">TURN (Traversal Using Relays around NAT)</a> servers it’s no longer a problem</p>

<p>In the following guide we will show how to setup TURN and STUN servers with Tigase XMPP Server, so that compatible XMPP clients will be able to use them. Our <a href="https://xmpp.cloud/" style="color:#5a66e8;" target="_blank">xmpp.cloud installation</a> supports not only them, but also <a href="https://tigase.net/tigase-im-mix/" style="color:#5a66e8;" target="_blank">XMPP MIX</a></p>

<h3><b>Assumptions</b></h3>

<p>We are assuming that you have installed your preferred TURN server and created an account on the TURN server for use by your XMPP server users and that you have installed and configured Tigase XMPP Server.<br /></p>

<p>At the end of the article there is a short guide hot to quickly setup CoTURN server.<br /></p>

<h3><b>Enabling external service discovery <i>(required only for Tigase XMPP Server 8.1.0 and earlier)</i></b></h3>

<p>First you need to edit <mark style="background-color&#x3a; &num;f5f2f0;">etc/config.tdsl</mark> file and:<br /></p>
<ol start="1">
<li><b>Add following line in the main section of the file:</b></li><br />
<mark style="background-color&#x3a; &num;f5f2f0;">ext-disco&apos; () &#123;&#125;</mark>
<br /><br />
<li><b>Add following line in the <mark style="background-color&#x3a; &num;f5f2f0;">sess-man</mark> section of the file:</b></li><br />
<mark style="background-color&#x3a; &num;f5f2f0;">ext-disco&apos; () &#123;&#125;</mark>
</ol>
<p>so that your config file would look like this:<br /></p>
<pre>
&#8217;ext-disco&#8217; ()
 {
  }
&#8217;sess-man&#8217; () {
    &#8217;urn:xmpp:extdisco:2&#8217; () {}
    ...
}
...
</pre>

<h3><b>Start Tigase XMPP Server</b></h3>
<p>After applying changes mentioned above, you need to start Tigase XMPP Server or, in case if it was running, restart it.</p>

<h3><b>Open Admin UI</b></h3>

<p>Open web browser and head to <mark style="background-color&#x3a; &num;f5f2f0;">http://&lt;your-xmpp-server-and-port&gt;/admin/</mark> (for example: <a href="https://localhost:8080" style="color:#5a66e8;" target="_blank">https://localhost:8080</a>). When promped, log in by providing admin user credentials: bare JID (i.e.: <mark style="background-color&#x3a; &num;f5f2f0;">user@domain</mark>) as the user and related password. Afterwards you’ll see main Web AdminUI screen:</p>

<center><img src="http://localhost:4000assets/img/blog/web-admin-main-page.png" style="width:50%;" /><br /><br /></center>
<p><br /></p>

<p>and on that screen open <b>Configuration</b> group on the left by clicking on it.</p>

<h3><b>Add external TURN service</b></h3>

<p>After opening <b>Configuration</b> group (1) click on <b>Add New Item</b> (2) position which has <b>ext-disco@…</b> in its subtitle.<br /></p>

<p>In the opened form you need to provide following detail:<br /></p>

<center><img src="http://localhost:4000assets/img/blog/web-admin-add-new-turn-item.png" style="width:50%;" /><br /><br /></center>
<p><br /></p>

<ul>
<li>Service - ID of the service which will be used for identification by Tigase XMPP Server (ie. turn@example.com)</li>
<li>Service name - name of the service which may be presented to the user (ie. TURN server)</li>
<li>Host - fully qualified domain name of the TURN server or its IP address (ie. turn.example.com)</li>
<li>Port - port at which TURN server listens (ie. 3478)</li>
<li>Type - type of the server, enter turn</li>
<li>Transport - type of transport used for communication with the server udp or tcp (usually udp)</li>
<li>Requires username and password - for notifying XMPP client that this service requires its username and password for XMPP service (leave unchecked)</li>
<li>Username - username required for authentication for TURN server (ie. turn-user)</li>
<li>Password - password required for authentication for TURN server (ie. turn-password)</li>

</ul>
<p>After filling out the form, press Submit button (3) to send form and add a TURN server to external services for your server.<br /> Admin UI will 
confirm that service was added with the following result<br /></p>

<center><img src="http://localhost:4000assets/img/blog/web-admin-add-new-item-confirmation.png" style="width:50%;" /><br /><br /></center>
<p><br /></p>

<h3><b>Add external STUN service</b></h3>

<p>While adding a TURN server is usually all what you need, in some cases you may want to allow your users to use also STUN. Steps are quite similar like on TURN server - after opening <b>Configuration</b> group (1) click on <b>Add New Item</b> (2) position which has <b>ext-disco@…</b> in its subtitle and in the opened form you need to provide following detail:</p>

<center><img src="http://localhost:4000assets/img/blog/web-admin-add-new-stun-item.png" style="width:50%;" /><br /><br /></center>
<p><br /></p>

<ul>
<li>Service - ID of the service which will be used for identification by Tigase XMPP Server (ie. stun@example.com)</li>
<li>Service name - name of the service which may be presented to the user (ie. STUN server)</li>
<li>Host - fully qualified domain name of the STUN server or its IP address (ie. stun.example.com)</li>
<li>Port - port at which TURN server listens (ie. 3478)</li>
<li>Type - type of the server, enter turn</li>
<li>Transport - type of transport used for communication with the server udp or tcp (usually udp)</li>
<li>Requires username and password - for notifying XMPP client that this service requires its username and password for XMPP service (leave unchecked)</li>
<li>Username - username required for authentication for STUN server (if required)</li>
<li>Password - password required for authentication for STUN server (if required)</li>

</ul>

<h3><b>Note</b></h3>

<p>If you are using the same server for STUN and TURN (you usually will as TURN servers usually contain STUN functionality) you will fill the following form with almost the same details *(only use different <b>Service</b> field value, <b>Type</b> will be stun and most likely you will skip passing <b>Username</b> and <b>Password</b> - leaving them empty, the rest of the field values will be the same).<br /></p>

<p>After filling out the form, press Submit button (3) to send form and add a STUN server to external services for your server. Admin UI will confirm that service was added with the following result</p>

<center><img src="http://localhost:4000assets/img/blog/web-admin-add-new-item-confirmation.png" style="width:50%;" /><br /><br /></center>
<p><br /></p>

<h3><b>And now what?</b></h3>

<p>Now you have fully configured your STUN/TURN server for usage with Tigase XMPP Server allowing XMPP clients connected to your server and compatible with <a href="https://xmpp.org/extensions/xep-0215.html" style="color:#5a66e8;" target="_blank">XEP-0215: External Service Discovery</a> to take full advantage of your STUN/TURN server ie. by providing better VoIP experience.</p>

<h3><b>CoTURN installation</b></h3>

<p>You can quickly setup CoTURN server using Docker. Please follow Docker installation on your operating system and then install CoTURN using <a href="https://hub.docker.com/r/instrumentisto/coturn" style="color:#5a66e8;" target="_blank">Docker Hub</a> (instrumentisto/coturn). The bare minimum required to run it looks like that (please update realm with your domain and external-ip with IP on which server should be accessible):</p>

<p><mark style="background-color&#x3a; &num;f5f2f0;">sudo docker run --name coturn -d --network=host --restart always  instrumentisto/coturn -n --log-file=stdout --min-port=49160 --max-port=49200 --realm=awesomexmpp.net --external-ip=&lt;external_ip&gt; -a'</mark><br /></p>

<p>Subsequently, add user to CoTURN with password and domain:<br /></p>

<p><mark style="background-color&#x3a; &num;f5f2f0;">sudo docker exec -i -t coturn turnadmin -a -u tigase -r awesomexmpp.net -p Ajbk7Ck38nIobLVl</mark></p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><category term="server" /><category term="installation" /><category term="stun" /><category term="turn" /><category term="audio-video" /><category term="calls" /><category term="VOIP" /><summary type="html"><![CDATA[Communication with your family and friends is not only about instant chats. Audio and Video calls are quite important and sometimes, under unfavourable network configurations establishing a call may prove difficult. Luckily, with the help of STUN (Session Traversal Utilities for NAT) and TURN (Traversal Using Relays around NAT) servers it’s no longer a problem]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/b3.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/b3.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">BeagleIM 4.0 and SiskinIM 6.0 released</title><link href="http://localhost:4000/jekyll/update/2020/09/04/beagleim-4.0-and-siskin-6.0-released.html" rel="alternate" type="text/html" title="BeagleIM 4.0 and SiskinIM 6.0 released" /><published>2020-09-04T00:00:00+05:30</published><updated>2020-09-04T00:00:00+05:30</updated><id>http://localhost:4000/jekyll/update/2020/09/04/beagleim-4.0-and-siskin-6.0-released</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/09/04/beagleim-4.0-and-siskin-6.0-released.html"><![CDATA[<p>New versions of XMPP clients for Apple’s mobile and desktop platforms have been released. The biggest change is introduction of XMPP MIX - the modern way of chatting in groups (if you are looking for a server where you can use this new feature be sure to check our<a href="" style="color:#5a66e8;" target="_blank"> xmpp.cloud installation</a>). It also significantly improves on audio/video calls.</p>

<h3><b>Common changes</b></h3>
<h3>New XEPs:</h3>
<ul>
<li>Added support for <a href="https://xmpp.org/extensions/xep-0369.html" style="color:#5a66e8;" target="_blank">XEP-0369: Mediated Information eXchange (MIX)</a> - significant improvement over group chats offered by MUC - less traffic and better delivery</li>
<li>Improved VoIP connectivity by adding <a href="https://xmpp.org/extensions/xep-0353.html" style="color:#5a66e8;" target="_blank">XEP-0353: Jingle Message Initiation</a> (now compatible with Jingle Message Initiation used by Conversations)</li>
<li>Added support for <a href="https://xmpp.org/extensions/xep-0308.html" style="color:#5a66e8;" target="_blank">XEP-0308: Last Message Correction</a> - editing sent message (relies on client compatibility)</li>
<li>Added support for <a href="https://xmpp.org/extensions/xep-0424.html" style="color:#5a66e8;" target="_blank">XEP-0424: Message Retraction</a> - deleting sent messages (relies on client compatibility)</li>
<li>Added support for quick replies - quoting messages to improve conversation flow</li>
<li>Added support for <a href="https://xmpp.org/extensions/xep-0158.html#register" style="color:#5a66e8;" target="_blank">XEP-0158: CAPTCHA Forms: Extended In-Band Registration</a> - some server may ask for additional information or verification during registration - with this feature it&#8217;s possible to sign up with those servers as well</li>
</ul>
<h3>Major changes</h3>
<ul>
<li>Redesigned channel joining UI</li>
<li>Optimized resource usage during the establishment of VoIP calls and improved quality of VoIP calls</li>
<li>Improved Markdown support</li>
<li>Improved message synchronization speed, reliability and add support for MAM version 2 (<a href="https://xmpp.org/extensions/xep-0313.html" style="color:#5a66e8;" target="_blank">XEP-0313: Message Archive Management</a>)</li>
<li>Started using MAM for MUC history synchronization on rejoin (if possible)</li>
<li>Improved support for CAPS (feature discovery)</li>
<li>New chats list view with a single section for 1-1 chats and group chats</li>
<li>Added a way to join hidden MUC rooms</li>
</ul>
<h3><b>Fixes</b></h3>
<ul>
<li>Fixed issue with avatars in group chats not being properly displayed.</li>
<li>Added workaround for possible issue with message archive synchronization if server does not send <mark style="background-color&#x3a; &num;f5f2f0;">&lt;complete/&gt;</mark> attribute</li>
<li>Fixed issue with channel info refresh</li>
</ul>

<h3><b>BeagleIM 4.0</b></h3>
<h3>UI adjustments:</h3>
<ul>
<li>MIX / group chat creation streamlined</li>
</ul>

<center><img src="http://localhost:4000assets/img/blog/mix-create-2.png" style="width:50%;" /><br /><br /></center>
<ul>
<li>Better VoIP connectivity</li>
</ul>

<center><img src="http://localhost:4000assets/img/blog/beagle-call.png" style="width:50%;" /><br /><br /></center>

<ul>
<li>Message Correction, Retraction and quick replies</li>
</ul>

<center><img src="http://localhost:4000assets/img/blog/beagle-edit-message.png" style="width:50%;" /><br /><br /></center>

<h3><b>Major Changes</b></h3>
<ul>
<li>Adjusted font size in chat history (message text is slightly bigger)</li>
<li>Improved support for XMPP URI (requires <a href="https://github.com/tigase/beagle-im-set-as-default" style="color:#5a66e8;" target="_blank">beagle-im-set-as-default</a> helper app)</li>
<li>Improved behaviour of service discovery window (indentation of items, scrolling)</li>
<li>Improved handling of responses for<mark style="background-color&#x3a; &num;f5f2f0;"> &lt;iq/&gt;</mark> requests which should fix some OMEMO key publication issues.</li>
<li>Improved message text selection</li>
<li>Remembers size of chats/roster windows</li>
<li>Improved auto-completion of nicknames.</li>
<li>Stopped downloading link previews if message with that link was received from someone outside of roster.</li>
</ul>

<h3><b>Fixes</b></h3>
<ul>
<li>Fixed issue with respecting global settings for Allow subscription and Request subscription</li>
<li>Fixed Typo in Authorization menu</li>
<li>Fixed issue with not showing notifications for incoming groupchat messages containing keywords</li>
<li>Improved scrolling behavior (scrolling to found or first unread message, scrolling on the opening of a chat and concurrency issue)</li>
<li>Fixed an issue with a chat message not being resized properly when window size was changed.</li>
<li>Fixed issue with text color in chat history</li>
<li>Fixed issue with invisible selection in the search dialog</li>
<li>Added possible workaround for crashes when preview is for a movie</li>
<li>Fixed crash when the server is not sending Content-Length for uploaded files.</li>
</ul>

<h3><b>Development</b></h3>
<ul>
<li>Fixed issues with compilation on XCode 12</li>
<li>Improved layout in chat logs (internal change)</li>
</ul>

<h3><b>SiskinIM 6.0</b></h3>
<ul>
<li>Improved detection of server features and prompting to enable them in SiskinIM</li>
<li>Added request for background fetch on push notification and fixed crashes when push notification is tapped just after it is displayed (<a href="https://projects.tigase.net/issue/siskinim-205" style="color:#5a66e8;" target="_blank">#siskinim-205</a>, <a href="https://projects.tigase.net/issue/siskinim-206" style="color:#5a66e8;" target="_blank">#siskinim-206</a>)</li>
<li>Fixed issue with using wrong speaker during the VoIP call (<a href="https://projects.tigase.net/issue/siskinim-211" style="color:#5a66e8;" target="_blank">#siskinim-211</a>)</li>
<li>Added warning when access to microphone or camera is not granted during initialization of a video call (<a href="https://projects.tigase.net/issue/siskinim-213" style="color:#5a66e8;" target="_blank">#siskinim-213</a>)</li>
<li>Improved account removal mechanism (<a href="https://projects.tigase.net/issue/siskinim-199" style="color:#5a66e8;" target="_blank">#siskinim-199</a>)</li>
<li>Improved look of the QR codes (<a href="https://projects.tigase.net/issue/siskinim-195" style="color:#5a66e8;" target="_blank">#siskinim-195</a>)</li>
<li>Fixed an issue with not dismissing room creation view after room is created (<a href="https://projects.tigase.net/issue/siskinim-230" style="color:#5a66e8;" target="_blank">#siskinim-230</a>)</li>
<li>Fixed an issue with encrypting files with AESGCM send to MUC rooms when default encryption is set to OMEMO (<a href="https://projects.tigase.net/issue/siskinim-237" style="color:#5a66e8;" target="_blank">#siskinim-237</a>)</li>
</ul>

<center><img src="http://localhost:4000assets/img/blog/siskin-chat-list.png" style="width:50%;" /><br /><br /></center>

<center><img src="http://localhost:4000assets/img/blog/siskin-chat.png" style="width:50%;" /><br /><br /></center>

<h3><b>Downloads</b></h3>
<p>You can download both application from their respective app-stores: <a href="https://beagle.im/" style="color:#5a66e8;" target="_blank">Beagle IM</a> from <a href="https://apps.apple.com/us/app/beagleim-by-tigase-inc/id1445349494" style="color:#5a66e8;" target="_blank">macOS appstore</a> and <a href="https://siskin.im/" style="color:#5a66e8;" target="_blank">Siskin IM</a> from <a href="https://apps.apple.com/us/app/tigase-messenger/id1153516838" style="color:#5a66e8;" target="_blank">iOS appstore</a> and star them on GitHub: <a href="https://github.com/tigase/siskin-im" style="color:#5a66e8;" target="_blank">Siskin IM on GitHub</a> and <a href="https://github.com/tigase/beagle-im" style="color:#5a66e8;" target="_blank">Beagle IM on GitHub</a></p>

<h3 style="text-align:center;">Join the Discussion</h3>
<center><img src="http://localhost:4000assets/img/blog/join-discussion-qr-code.png" style="width:30%;border-radius:0%;" /><br /><br /></center>

<center>You can discuss all-things-Tigase (including our client apps)<br /> on our groupchat: <a href="mailto:tigase@muc.tigase.org" style="color:#5a66e8;">tigase@muc.tigase.org</a></center>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><category term="release" /><category term="beagleIM" /><category term="siskinIM" /><category term="MIX" /><category term="VOIP" /><category term="Jingle" /><summary type="html"><![CDATA[New versions of XMPP clients for Apple’s mobile and desktop platforms have been released. The biggest change is introduction of XMPP MIX - the modern way of chatting in groups (if you are looking for a server where you can use this new feature be sure to check our xmpp.cloud installation). It also significantly improves on audio/video calls.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/b4.png" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/b4.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>